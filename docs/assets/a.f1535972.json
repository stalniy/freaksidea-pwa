{"title":"Управление пространством и временем. Magento Cron, если просто","summary":"Системные администраторы часто встречаются с вопросом запуска каких-либо действий в определенное время. В Linux-е это можно сделать при помощи команды crontab -e. Crontab имеет свой специфический формат, достаточно простой. Чтобы не зависеть от операционной системы и формата конфигурационного файла разработчики Magento сделали абстракцию над cron-ом.\n","author":"sstotskyi","categories":["backend","important"],"createdAt":"2012-03-12T15:22:00.000Z","meta":{"keywords":["magento","cron"]},"alias":"upravlenie-prostranstvom-i-vremenem-magento-cron-esli-prosto","content":"<p>Системные администраторы часто встречаются с вопросом запуска каких-либо действий в определенное время. В <em>Linux</em>-е это можно сделать при помощи команды <em>crontab -e</em>. Crontab имеет свой специфический формат, достаточно простой. Чтобы не зависеть от операционной системы и формата конфигурационного файла разработчики <em>Magento</em> реализовали свой функционал <a href=\"http://ru.wikipedia.org/wiki/Cron\" target=\"_blank\" rel=\"noopener nofollow\">cron</a>-а.</p>\n<p>В стандартном наборе <em>Magento</em> есть 2 файла <strong>cron.sh</strong> и <strong>cron.php</strong>. Если у Вас <em>Unix</em> подобная операционная система, то в крон нужно ставить первый скрипт (в идеальном случае его нужно запускать каждую секунду, но достаточно раз в 5-10 мин). Почему первый? Потому что он проверяет не запущен ли еще один точно такой же процесс, что предотвращает конфликты.</p>\n<h2 id=\"konfiguracziya-cron-a\"><a name=\"konfiguracziya-cron-a\" class=\"h-link\" href=\"#\"></a>Конфигурация Cron-а</h2>\n<p>Роботу <em>cron</em>-а можно слегка оптимизировать под свои нужды в настройках <strong>System -&gt; Configuration -&gt; System -&gt; Cron</strong>. Рассмотрим их назначение</p>\n<ul>\n<li>генерировать задачи каждые (<em>A</em> минут) - новые задания (при запуске <em>cron.php</em>) будут создаваться не чаще чем через <em>A</em> минут</li>\n<li>генерировать задачи наперед (на <em>В</em> минут) - задачи будут наперед генерироватся на <em>B</em> минут</li>\n<li>задача будет считаться утеряной (через <em>C</em> минут) - если <em>cron</em> будет запущен меньше чем через <em>C</em> минут после того как какая-то задача была запланирована, то она выполнится; если позже то она получит статус утеряной, пропущеной</li>\n<li>очистка истории каждые (<em>D</em> минут)</li>\n<li>время жизни успешно завершенных операций</li>\n<li>время жизни заданий которые провались при выполнении</li>\n</ul>\n<h2 id=\"sposoby-ustanovki-zadachi-v-cron\"><a name=\"sposoby-ustanovki-zadachi-v-cron\" class=\"h-link\" href=\"#\"></a>Способы установки задачи в cron</h2>\n<p>Первый способ через конфигурацию модуля объяснен <app-link to=\"backend\" params=\"{&quot;id&quot;:&quot;magento-konfighuratsiia-ot-a-do-ia-bazovye-nastroiki-modulia&quot;}\">в одной из предыдущих статей</app-link>. Это подходит для задач, в которых пользователь не берет участия. Но иногда нужно чтобы была возможность менять время запуска. Рассмотрим пример этого функционала на примере конфигурации <strong>Sytem -&gt; Configuration -&gt; Advanced -&gt; Sytem -&gt; Log Cleaning</strong> - очистка таблиц логов.</p>\n<p><img src=\"/media/assets/log-clean.png\" alt=\"\" title=\"Magento log clean cron tab\" width=\"600\" height=\"291\"></p>\n<p>Для нас здесь важными являются 2 поля: <em>Start Time</em> и <em>Frequency</em>. Первый задает время запуска (хотя можно указать и секунды, но на самом деле они не будут учитываться, никогда), второй - частоту (каждый день, каждую неделю, каждый месяц).</p>\n<p>Чтобы понять, что происходит со всем этим при нажатии на кнопку &quot;<em>Save Config</em>&quot;, нужно понимать как создаются поля для конфигурации. А об этом написано <app-link to=\"backend\" params=\"{&quot;id&quot;:&quot;magento-konfiguratsiya-ot-a-do-ya-systemxml&quot;}\">в этой статье</app-link>.</p>\n<p>Посмотрим <em>system.xml</em> файл модуля <code>Mage_Log</code>, чтобы узнать какие классы отвечают за вывод и обработку этих полей.</p>\n<pre><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">time</span> <span class=\"hljs-attr\">translate</span>=<span class=\"hljs-string\">\"label\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Start Time<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">frontend_type</span>&gt;</span>time<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">frontend_type</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">sort_order</span>&gt;</span>3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">sort_order</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">show_in_default</span>&gt;</span>1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">show_in_default</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">show_in_website</span>&gt;</span>0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">show_in_website</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">show_in_store</span>&gt;</span>0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">show_in_store</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">time</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">frequency</span> <span class=\"hljs-attr\">translate</span>=<span class=\"hljs-string\">\"label\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Frequency<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">frontend_type</span>&gt;</span>select<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">frontend_type</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">source_model</span>&gt;</span>adminhtml/system_config_source_cron_frequency<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">source_model</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">backend_model</span>&gt;</span>adminhtml/system_config_backend_log_cron<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">backend_model</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">sort_order</span>&gt;</span>4<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">sort_order</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">show_in_default</span>&gt;</span>1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">show_in_default</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">show_in_website</span>&gt;</span>0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">show_in_website</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">show_in_store</span>&gt;</span>0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">show_in_store</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">frequency</span>&gt;</span>\n</code></pre>\n<p>Первый неинтересен, так просто выводит время. Во-втором видим определена <strong>backend</strong> модель, которая запустит метод <em>_afterSave</em> при сохранении конфигурации. Рассмотрим этот метод более детально</p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-keyword\">protected</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_afterSave</span><span class=\"hljs-params\">()</span>\n</span>{\n    $enabled    = <span class=\"hljs-keyword\">$this</span>-&gt;getData(<span class=\"hljs-string\">'groups/log/fields/enabled/value'</span>);\n    $time       = <span class=\"hljs-keyword\">$this</span>-&gt;getData(<span class=\"hljs-string\">'groups/log/fields/time/value'</span>);\n    $frequncy   = <span class=\"hljs-keyword\">$this</span>-&gt;getData(<span class=\"hljs-string\">'groups/log/fields/frequency/value'</span>);\n    $errorEmail = <span class=\"hljs-keyword\">$this</span>-&gt;getData(<span class=\"hljs-string\">'groups/log/fields/error_email/value'</span>);\n\n    $frequencyDaily     = Mage_Adminhtml_Model_System_Config_Source_Cron_Frequency::CRON_DAILY;\n    $frequencyWeekly    = Mage_Adminhtml_Model_System_Config_Source_Cron_Frequency::CRON_WEEKLY;\n    $frequencyMonthly   = Mage_Adminhtml_Model_System_Config_Source_Cron_Frequency::CRON_MONTHLY;\n\n    <span class=\"hljs-keyword\">if</span> ($enabled) {\n        $cronDayOfWeek = date(<span class=\"hljs-string\">'N'</span>);\n        $cronExprArray = <span class=\"hljs-keyword\">array</span>(\n            intval($time[<span class=\"hljs-number\">1</span>]),                                   <span class=\"hljs-comment\"># Minute</span>\n            intval($time[<span class=\"hljs-number\">0</span>]),                                   <span class=\"hljs-comment\"># Hour</span>\n            ($frequncy == $frequencyMonthly) ? <span class=\"hljs-string\">'1'</span> : <span class=\"hljs-string\">'*'</span>,       <span class=\"hljs-comment\"># Day of the Month</span>\n            <span class=\"hljs-string\">'*'</span>,                                                <span class=\"hljs-comment\"># Month of the Year</span>\n            ($frequncy == $frequencyWeekly) ? <span class=\"hljs-string\">'1'</span> : <span class=\"hljs-string\">'*'</span>,        <span class=\"hljs-comment\"># Day of the Week</span>\n        );\n        $cronExprString = join(<span class=\"hljs-string\">' '</span>, $cronExprArray);\n    } <span class=\"hljs-keyword\">else</span> {\n        $cronExprString = <span class=\"hljs-string\">''</span>;\n    }\n\n    <span class=\"hljs-keyword\">try</span> {\n        Mage::getModel(<span class=\"hljs-string\">'core/config_data'</span>)\n            -&gt;load(<span class=\"hljs-keyword\">self</span>::CRON_STRING_PATH, <span class=\"hljs-string\">'path'</span>)\n            -&gt;setValue($cronExprString)\n            -&gt;setPath(<span class=\"hljs-keyword\">self</span>::CRON_STRING_PATH)\n            -&gt;save();\n\n        Mage::getModel(<span class=\"hljs-string\">'core/config_data'</span>)\n            -&gt;load(<span class=\"hljs-keyword\">self</span>::CRON_MODEL_PATH, <span class=\"hljs-string\">'path'</span>)\n            -&gt;setValue((string) Mage::getConfig()-&gt;getNode(<span class=\"hljs-keyword\">self</span>::CRON_MODEL_PATH))\n            -&gt;setPath(<span class=\"hljs-keyword\">self</span>::CRON_MODEL_PATH)\n            -&gt;save();\n    } <span class=\"hljs-keyword\">catch</span> (<span class=\"hljs-keyword\">Exception</span> $e) {\n        Mage::throwException(Mage::helper(<span class=\"hljs-string\">'adminhtml'</span>)-&gt;__(<span class=\"hljs-string\">'Unable to save the cron expression.'</span>));\n    }\n}\n</code></pre>\n<p>Вначале проверяется включена ли очистка логов. Если да, тогда создаем <em>cron expression</em> базируясь на времени и частоте введенными пользователем (как видно 3-ий элемент массива, отвечающий за секунды, не используется). Потом просто сохраняем 2 строки в таблицу <em>core_config_data</em>.</p>\n<p>При первом запуске скрипта <em>cron</em>-а, он сгенерирует для себя задачи на ближайшее время и сохранит их в таблице <strong>cron_schedule</strong>. Этот факт можно использовать при отладке. Но стоит помнить, что все даты в базе <em>Magento</em> cохраняются в <em>GMT</em> формате.</p>\n<p>При следующем запуске, если есть задачи <em>cron</em> будет их выполнять по очереди.</p>\n<p>Этот способ является полностью аналогичным первому (через конфигурацию), потому что, на сколько известно, все настройки <em>Magento</em> мерджатся, это относится и к тем, которые лежат в базе данных.</p>","headings":[["konfiguracziya-cron-a","Конфигурация Cron-а"],["sposoby-ustanovki-zadachi-v-cron","Способы установки задачи в cron"]],"id":"upravlenie-prostranstvom-i-vremenem-magento-cron-esli-prosto"}