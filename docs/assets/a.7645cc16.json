{"title":"Оптимизируем серверную часть Magento 1.x","summary":"Magento одна из таких платформ, в которой достаточно непросто разобраться.\nСтруктура базы данных очень сложная, а layout.xml может изменятся из разных\nисточников. Именно поэтому для таких систем и нужен серьезный инструмент для\nотладки.\n","author":"sstotskyi","categories":["backend","important"],"createdAt":"2017-06-19T08:00:00.000Z","meta":{"keywords":["magento","оптимизация","profiler"]},"alias":"optimiziruem-servernuyu-chast-magento-1x","content":"<p>Обычно после реализации своего очередного детища, я трачу некоторое время рассматривая его со всех сторон :) В этот раз все было так же, за исключением того, что я дополнительно решил оптимизировать Magento.</p>\n<p>Если с клиентской частью все понятно, то с серверной немного сложнее. Модулей много, зависимостей много, запросов в базу много, нужно понять кто и откуда все это делает. И к моему удивлению, я нашел очень хороший инструмент - <a href=\"https://github.com/ecoco/magento_profiler\" target=\"_blank\" rel=\"noopener nofollow\">Magento Profiler</a> от компании Ecoco, который помог разобраться со всем этим зоопарком :)</p>\n<h2 id=\"ustanovka\"><a name=\"ustanovka\" class=\"h-link\" href=\"#\"></a>Установка</h2>\n<p>На проекте, я не использовал composer, и не хотел особо углубляться в детали как его подружить с Magento 1.x. Поэтому я просто клонировал репозиторий и скопировал потом файлы в свой проект.</p>\n<p>Конечно же, эти файлы я не добавлял в продакшен репозиторий проекта, дабы быть на 100% уверенным, что этот профайлер не будет использован во зло.</p>\n<h2 id=\"chto-gde\"><a name=\"chto-gde\" class=\"h-link\" href=\"#\"></a>Что, где?</h2>\n<p>Для того чтобы увидеть панель отладки нужно сразу же после домена, вместо index.php, написать dev.php (например, http://localhost:8000/dev.php). Сайтом можно пользоваться, как обычно, а в панели внизу можно достаточно просто найти, какие модели или блоки используются и какие запросы идут в базу данных, сколько их и т.д. В целом это выглядит вот так</p>\n<p><img src=\"/media/assets/magento-profiler.png\" alt=\"Magento Profiler\" loading=\"lazy\" width=\"1123\" style=\"max-height: 162px;\" srcset=\"/media/assets/magento-profiler-xs.png 375w,/media/assets/magento-profiler-sm.png 768w,/media/assets/magento-profiler-md.png 1024w,/media/assets/magento-profiler.png 1280w\" sizes=\"(max-width: 375px) 375px,(max-width: 768px) 768px,(max-width: 1024px) 1024px,1280px\"></p>\n<h2 id=\"otlazhivaem\"><a name=\"otlazhivaem\" class=\"h-link\" href=\"#\"></a>Отлаживаем</h2>\n<p>Как видно с рисунка, главная страница сайта отправляет 59 запросов в базу, что достаточно много. Давайте смотреть, что за запросы. Для этого нужно просто нажать на значок базы данных и тогда откроется новая страница, на которой мы увидим конкретные запросы. Пролистав немного вниз, я вижу закономерность в запросах:</p>\n<p><img src=\"/media/assets/magento-similar-queries.png\" alt=\"Magento profiler\" loading=\"lazy\" width=\"1108\" style=\"max-height: 552px;\" srcset=\"/media/assets/magento-similar-queries-xs.png 375w,/media/assets/magento-similar-queries-sm.png 768w,/media/assets/magento-similar-queries-md.png 1024w,/media/assets/magento-similar-queries.png 1280w\" sizes=\"(max-width: 375px) 375px,(max-width: 768px) 768px,(max-width: 1024px) 1024px,1280px\"></p>\n<p>Ага, похоже что эти запросы отправляются в цикле на каждый продукт, чтобы отобразить рейтинг. Тут я подумал СТОП! Я ведь специально написал оптимизированный запрос, который получает рейтинг для всех продуктов и он 1!</p>\n<p>Чтобы понять кто виновник этого безобразия, нужно нажать на ссылку Show trace. Это покажет обратный стек вызовов, т.е. след, по которому видно, с какой части кода был сделан запрос.</p>\n<pre><code class=\"hljs language-php\">Trace:\nOriginal_Mage_Core_Model_Resource_Db_Abstract::load() (called from MageCoreModelResourceDbAbstract.php at line <span class=\"hljs-number\">30</span>)\nMage_Core_Model_Resource_Db_Abstract::load() (called from <span class=\"hljs-keyword\">Abstract</span>.php at line <span class=\"hljs-number\">225</span>)\nMage_Core_Model_Abstract::load() (called from Review.php at line <span class=\"hljs-number\">102</span>)\nMage_Review_Model_Review::getEntitySummary() (called from Helper.php at line <span class=\"hljs-number\">53</span>)\nMage_Review_Block_Helper::getSummaryHtml() (called from <span class=\"hljs-keyword\">Abstract</span>.php at line <span class=\"hljs-number\">319</span>)\nMage_Catalog_Block_Product_Abstract::getReviewsSummaryHtml() (called from <span class=\"hljs-keyword\">List</span>.php at line <span class=\"hljs-number\">74</span>)\nFreaks_Ruba4ok_Block_Product_List::getReviewsSummaryHtml() (called from swiper.phtml at line <span class=\"hljs-number\">33</span>)\n</code></pre>\n<p>Дальше смотрим и проверяем каждый блок, на предмет отправки запросов. Через некоторое время я нашел вот такой код:</p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Mage_Review_Block_Helper</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Mage_Core_Block_Template</span>\n</span>{\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getSummaryHtml</span><span class=\"hljs-params\">($product, $templateType, $displayIfNoReviews)</span>\n    </span>{\n        <span class=\"hljs-comment\">// pick template among available</span>\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">empty</span>(<span class=\"hljs-keyword\">$this</span>-&gt;_availableTemplates[$templateType])) {\n            $templateType = <span class=\"hljs-string\">'default'</span>;\n        }\n        <span class=\"hljs-keyword\">$this</span>-&gt;setTemplate(<span class=\"hljs-keyword\">$this</span>-&gt;_availableTemplates[$templateType]);\n\n        <span class=\"hljs-keyword\">$this</span>-&gt;setDisplayIfEmpty($displayIfNoReviews);\n\n        <span class=\"hljs-keyword\">if</span> (!$product-&gt;getRatingSummary()) {\n            Mage::getModel(<span class=\"hljs-string\">'review/review'</span>)\n               -&gt;getEntitySummary($product, Mage::app()-&gt;getStore()-&gt;getId());\n        }\n        <span class=\"hljs-keyword\">$this</span>-&gt;setProduct($product);\n\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>-&gt;toHtml();\n    }\n</code></pre>\n<p>Обратите внимание на второй if. Он проверяет, если продукт не имеет рейтинга, то нужно его взять из базы. Что вроде бы логично, но ведь я знаю что в этого продукта нет рейтинга, тогда зачем делает еще запрос?</p>\n<p>Чтобы исправить это нелепое недоразумение, я добавил пустой рейтинг тем продуктам, которые его не имеют. Тогда класс Mage_Review_Block_Helper проверит, что поле не пустое (ведь пустой объект все же объект) и не будет делать запрос в базу:</p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Freaks_Ruba4ok_Block_Product_List</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Mage_Catalog_Block_Product_Abstract</span>\n</span>{\n    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_setRatingSummaryFor</span><span class=\"hljs-params\">($product)</span>\n    </span>{\n        $summaryPerProduct = <span class=\"hljs-keyword\">$this</span>-&gt;getData(<span class=\"hljs-string\">'summaries_per_product'</span>);\n\n        <span class=\"hljs-keyword\">if</span> (!is_array($summaryPerProduct)) {\n            $summaryPerProduct = <span class=\"hljs-keyword\">$this</span>-&gt;helper(<span class=\"hljs-string\">'freaks_ruba4ok'</span>)\n                -&gt;indexArrayBy(<span class=\"hljs-string\">'entity_pk_value'</span>, <span class=\"hljs-keyword\">$this</span>-&gt;_getSummariesForProducts());\n            <span class=\"hljs-keyword\">$this</span>-&gt;setData(<span class=\"hljs-string\">'summaries_per_product'</span>, $summaryPerProduct);\n        }\n\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">isset</span>($summaryPerProduct[$product-&gt;getId()])) {\n            $product-&gt;setRatingSummary($summaryPerProduct[$product-&gt;getId()]);\n        } <span class=\"hljs-keyword\">else</span> {\n            $product-&gt;setRatingSummary(<span class=\"hljs-keyword\">$this</span>-&gt;helper(<span class=\"hljs-string\">'freaks_ruba4ok'</span>)-&gt;getEmptyReviewSummary());\n        }\n\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>;\n    }\n</code></pre>\n<p>В своем классе блока я добавил else ветку для случая если в продукт не имеет рейтинга. А в свой класс хелпера добавил метод</p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Freaks_Ruba4ok_Helper_Data</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Mage_Core_Helper_Data</span>\n</span>{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getEmptyReviewSummary</span><span class=\"hljs-params\">()</span>\n    </span>{\n        <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-keyword\">$this</span>-&gt;_emptyReviewSummary) {\n            <span class=\"hljs-keyword\">$this</span>-&gt;_emptyReviewSummary = Mage::getModel(<span class=\"hljs-string\">'review/review_summary'</span>)\n                -&gt;setReviewsCount(<span class=\"hljs-number\">0</span>)\n                -&gt;setRatingSummary(<span class=\"hljs-number\">0</span>)\n                -&gt;setStoreId(Mage::app()-&gt;getStore()-&gt;getId());\n        }\n\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>-&gt;_emptyReviewSummary;\n    }\n</code></pre>\n<p>С этим изменением количество запросов упало до 40.</p>\n<p>Потом я решил зайти на страницу категории, которая отображает продукты и там я увидел 68 запрос в базу! Что? Откуда?</p>\n<p><img src=\"/media/assets/magento-profiler-products.png\" alt=\"Magento profiler products page\" loading=\"lazy\" width=\"1129\" style=\"max-height: 143px;\" srcset=\"/media/assets/magento-profiler-products-xs.png 375w,/media/assets/magento-profiler-products-sm.png 768w,/media/assets/magento-profiler-products-md.png 1024w,/media/assets/magento-profiler-products.png 1280w\" sizes=\"(max-width: 375px) 375px,(max-width: 768px) 768px,(max-width: 1024px) 1024px,1280px\"></p>\n<p>Опять таки, открываем профайлер, ищем тенденцию. Опа :) Запросы шлет все тот же блок. Оказывается он используется во многих местах. В таком случае может помочь только реврайт блока или события. Я выбрал второй вариант.</p>\n<p>В конкретном случае, можно слушает события блоков, которые выводят список продуктов. В моем случае их всего 2:</p>\n<pre><code class=\"hljs language-xml\"><span class=\"hljs-comment\">&lt;!-- .... --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">frontend</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">events</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">catalog_block_product_list_collection</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">observers</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">freaks_ruba4ok</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">class</span>&gt;</span>freaks_ruba4ok/observer<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">class</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">method</span>&gt;</span>addEmptyRatingSummary<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">method</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">freaks_ruba4ok</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">observers</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">catalog_block_product_list_collection</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">catalog_product_upsell</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">observers</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">freaks_ruba4ok</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">class</span>&gt;</span>freaks_ruba4ok/observer<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">class</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">method</span>&gt;</span>addEmptyRatingSummary<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">method</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">freaks_ruba4ok</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">observers</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">catalog_product_upsell</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">events</span>&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- .... --&gt;</span>\n</code></pre>\n<p>Каждый раз кода перед отрисовкой блоков catalog_product_upsell и catalog_block_product_list_collection, я буду добавлять всем продуктам из коллекции пустой рейтинг если рейтинга у них нет.</p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Freaks_Ruba4ok_Model_Observer</span> </span>{\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">addEmptyRatingSummary</span><span class=\"hljs-params\">(Varien_Event_Observer $observer)</span>\n  </span>{\n    $productCollection = $observer-&gt;getEvent()-&gt;getCollection();\n\n    <span class=\"hljs-keyword\">if</span> ($productCollection <span class=\"hljs-keyword\">instanceof</span> Varien_Data_Collection) {\n      $productCollection-&gt;load();\n\n      <span class=\"hljs-keyword\">foreach</span> ($productCollection <span class=\"hljs-keyword\">as</span> $product) {\n        <span class=\"hljs-keyword\">if</span> (!$product-&gt;getRatingSummary()) {\n          $product-&gt;setRatingSummary(Mage::helper(<span class=\"hljs-string\">'freaks_ruba4ok'</span>)-&gt;getEmptyReviewSummary());\n        }\n      }\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>;\n  }\n</code></pre>\n<p>После этого изменения количество запросов упало до 37! Много, но уже лучше :)</p>\n<p>Вот таким несложным способом можно идентифицировать узкие места в магазине и почти, что за бесплатно оптимизировать его загрузку.</p>","headings":[["ustanovka","Установка"],["chto-gde","Что, где?"],["otlazhivaem","Отлаживаем"]],"id":"optimiziruem-servernuyu-chast-magento-1x"}