{"title":"Оптимизация загрузки страницы в Magento 1.x","summary":"Так уж сложилось, что во времена создания Magento никто особо не задумывался\nоб клиентской оптимизации. Тогда это было не очень важно, но сейчас все\nкардинально изменилось. Оптимизация загрузки страницы на сегодня одна из самых\nважных метрик для интернет магазина, так давайте улучшим наш Magento, чтобы он\nвсегда был в ТОР-е поисковых систем!\n","author":"sstotskyi","categories":["backend","important"],"createdAt":"2017-06-21T08:02:00.000Z","meta":{"keywords":["magento","javascript","оптимизация","скорость загрузки"]},"alias":"optimizatsiya-zagruzki-stranitsy-v-magento-1x","content":"<p>Если сайт грузится дольше 3-5 секунд я закрываю вкладку. Почему? Да просто я не люблю ждать. Не люблю ждать людей, которые опаздывают, поезда, самолеты, не люблю ждать своего заказа в ресторане и больше всего я не люблю ждать пока загрузится сайт на моем 3G интернете :)</p>\n<p>Оптимизация клиентской части в Magento не то чтобы плохая, она ужасная. JavaScript код можно найти повсюду, начиная з тега head и заканчивая, какими-то блоками в body. Самое страшное это код в блоках, потому что &quot;благодаря&quot; этому я не могу перенести все скрипты в конец страницы, и тем самым ускорить ее загрузку... Но все же есть несколько способов которые помогут ускорить загрузку магазина, некоторые применимы только к Magento, другие более универсальные. Давайте разбираться</p>\n<h2 id=\"http-keshirovanie-i-gzip\"><a name=\"http-keshirovanie-i-gzip\" class=\"h-link\" href=\"#\"></a>HTTP кэширование и gzip</h2>\n<p>Если у Вас есть доступ к настройкам севера, то убедитесь что у Вас включено кэширование для всех рисунков, css и js файлов, а также файлов шрифтов. Также, включить компрессию для всех текстовых файлов при помощи gzip. Современные броузеры умеют делать декомпрессию таких файлов, в конечном счете получается намного быстрее заархивировать файл и отправить меньше данных по сети и потом его розархивировать. О том как <app-link to=\"backend\" params=\"{&quot;id&quot;:&quot;vklyuchaem-http-keshirovanie-v-nginx-i-apache2&quot;}\">включить HTTP кэширование на веб серверах Apache2 и nginx</app-link>, я написал в отдельной статье.</p>\n<h2 id=\"optimizacziya-servernoj-chasti-v-magento\"><a name=\"optimizacziya-servernoj-chasti-v-magento\" class=\"h-link\" href=\"#\"></a>Оптимизация серверной части в Magento</h2>\n<p>Включите все возможное кэширование в Magento, это особенно важно для блоков, поскольку вся основная работа по отображению данных происходит именно там. Так же очень важно убедится, что страница делает как можно меньше запросов в базу, а если делает много, то все они должны использовать индексы. На момент написания этой статьи Google требует, чтобы время обработки запроса было не больше 200 мс. Это непросто, но это то куда нужно стремится. О том как можно <app-link to=\"backend\" params=\"{&quot;id&quot;:&quot;optimiziruem-servernuyu-chast-magento-1x&quot;}\">оптимизировать страницу в Magento</app-link> я писал чуть раньше.</p>\n<h2 id=\"optimizacziya-risunkov\"><a name=\"optimizacziya-risunkov\" class=\"h-link\" href=\"#\"></a>Оптимизация рисунков</h2>\n<p>Здесь все просто, либо используете Image Magick пакет для PHP и напишите свой адаптер для обработки рисунков в Magento, либо просто используйте онлайн решения. Размер большинства рисунков можно очень сильно уменьшить! Плюс-минус в 2 раза! А это соответственно улучшит загрузку магазина, особенно на мобильных устройствах. Я использую сервис <a href=\"http://optimizilla.com/\" target=\"_blank\" rel=\"noopener nofollow\">Optimizilla</a>.</p>\n<h2 id=\"css-sprajty\"><a name=\"css-sprajty\" class=\"h-link\" href=\"#\"></a>CSS спрайты</h2>\n<p>Самое простое, с чего можно начать - это использовать CSS спрайты. Сейчас очень много инструментов в онлайн и оффлайн, которые помогут создать оптимальный спрайт с набора рисунков (в последний раз я использовал <a href=\"https://github.com/selaux/node-sprite-generator\" target=\"_blank\" rel=\"noopener nofollow\">node-sprite-generator</a>), а также сгенерирует готовый CSS, SASS или что другое Вы используете у себя на проекте. Это поможет уменьшить количество запросов на сервер и соответственно ускорит взаимодействие пользователя с магазином.</p>\n<h2 id=\"data-urls\"><a name=\"data-urls\" class=\"h-link\" href=\"#\"></a>Data urls</h2>\n<p>Маленькие файлы (обычно &lt; 3 kB) рисунков, лучше конвертировать в data url и вставлять прямо в CSS. Такие файлики закэшируется браузером вместе с CSS и позволит избежать лишних запросов на сервер. Их лучше не добавлять в спрайты поскольку зазор между ними и соседними рисунками будет большой, из-за чего вырастет размер спрайте. Для конвертации рисунков в data url я использую <a href=\"https://www.base64-image.de/\" target=\"_blank\" rel=\"noopener nofollow\">Base64 Image Ecoder</a>.</p>\n<h2 id=\"offlajn-rezhim-s-service-worker\"><a name=\"offlajn-rezhim-s-service-worker\" class=\"h-link\" href=\"#\"></a>Оффлайн режим с Service Worker</h2>\n<p>Application Cache и Service Worker - это технологии предназначенные для создания сайтов, которые могут работать полностью оффлайн! В случае с Magento, если Вы конечно же это не предусмотрите в JavaScript, эти технологии не позволят пользователям делать заказы пока они не подключены к сети. Но это поможет закэшировать полностью все или большинство рисунков с Вашего интернет магазин, что очень сильно ускорит скорость загрузки страницы для пользователей, ведь все уже скачено, нет нужды делать дополнительные запросы на сервер. Более детально о том, как <app-link to=\"backend\" params=\"{&quot;id&quot;:&quot;progressivnyj-internet-magazin-service-worker-v-magento&quot;}\">Service Worker может оптимизировать загрузку</app-link> можно узнать в отдельной статье.</p>\n<h2 id=\"udalite-nenuzhnye-java-script-i-css-fajly\"><a name=\"udalite-nenuzhnye-java-script-i-css-fajly\" class=\"h-link\" href=\"#\"></a>Удалите ненужные JavaScript и CSS файлы</h2>\n<p>Наверняка Вы используете нестандартную тему (думаю большинство сайтов использует нестандартную тему ;)), то очевидно, что некоторые файлы не используются вообще, но грузятся на странице. Давайте посмотрим какие файлы можно удалить (размеры файлов указаны для Magento 1.9.3.1):</p>\n<ol>\n<li><strong>varien/menu.js</strong> (4.4 kB) Этот файл &quot;оживляет&quot; список вложенных категорий. Скорее всего стандартное меню Вам не подойдет и Вы используете что-то другое</li>\n<li><strong>lib/ds-sleight.js</strong> (1.6 kB) Решает проблему с прозрачностью в PNG рисунках для старых версий Internet Explorer (5.5, 6). В 2017 году поддерживать IE6? Не смешите и удаляйте!</li>\n<li><strong>mage/captcha.js</strong> (3.1 kB) Позволяет подключить капчу на стороне фронтенд для разных форм. Конечно, если хотите используйте, но сейчас есть уже намного более User Friendly способы удостоверится, что пользователь не робот, чем просто показывать ему сложный рисунок и просить напрячь мозги и разобраться, что же там написано. К примеру <app-link to=\"backend\" params=\"{&quot;id&quot;:&quot;kak-podklyuchit-google-recaptcha-na-lyubuyu-formu-v-magento&quot;}\">Google Recaptcha</app-link> з чекбоксом.</li>\n<li><strong>scriptaculous/slider.js</strong> (10.3 kB) Опять же, если Вы не используете стандартную тему этот файл Вам не нужен. К тому же, во времена роста количества мобильных устройств, я бы смотрел на что-то вроде <a href=\"http://idangero.us/swiper/#.WRBSlyF96b8\" target=\"_blank\" rel=\"noopener nofollow\">Swiper</a> библиотеки, которая позволяет листать слайды не только при помощи стрелочек, но и просто перелистывая слайд на планшете, что более удобно и привычно для пользователя. Некоторое время назад я писал о том, как <app-link to=\"backend\" params=\"{&quot;id&quot;:&quot;integratsiya-mobile-friendly-slajdera-v-magento&quot;}\">интегрировать такой свайпер на страницу продуктов</app-link>.</li>\n<li><strong>scriptaculous/builder.js</strong> (4.7 kB) Скорее всего Ваша тема не используете этот файл. Он нужен только в случае если где-то в теме вызывается метод tagifyText. Нигде по исходному коду этот метод не вызывается, так что спокойно удаляем файл и экономим еще 5 кБ.</li>\n<li><strong>scriptaculous/dragdrop.js</strong> (31.1 kB) Этот файл добавляет возможность перетаскивать элементы и используется в Magento только для увеличения картинки продукта (zoom). Использовать целых 30+ кБ только для одного места - это уже слишком. Если Вы не используете стандартный zoom - спокойно удаляйте.</li>\n<li><strong>skin/frontend/base/default/js/ie6.js</strong> (1.8 kB) Говорит сам за себя, просто удаляйте.</li>\n<li><strong>skin/frontend/base/default/css/styles-ie.css</strong> (4.3 kB) Тоже самое что и предыдущий - удаляем!</li>\n</ol>\n<p>Под словом &quot;удаляем&quot;, я имею введу &quot;перестаем использовать&quot;, сам файл на файловой систему удалять не нужно :) А как же тогда? Просто в <app-link to=\"backend\" params=\"{&quot;id&quot;:&quot;magento-konfighuratsiia-ot-a-do-ia-layout-updates&quot;}\">local.xml вашей темы</app-link> добавьте такой код:</p>\n<pre><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">default</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">reference</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"head\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">action</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"removeItem\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">type</span>&gt;</span>js<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">type</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">name</span>&gt;</span>varien/menu.js<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">name</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">action</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">action</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"removeItem\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">type</span>&gt;</span>js<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">type</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">name</span>&gt;</span>lib/ds-sleight.js<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">name</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">action</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">action</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"removeItem\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">type</span>&gt;</span>js<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">type</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">name</span>&gt;</span>mage/captcha.js<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">name</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">action</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">action</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"removeItem\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">type</span>&gt;</span>js<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">type</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">name</span>&gt;</span>scriptaculous/slider.js<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">name</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">action</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">action</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"removeItem\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">type</span>&gt;</span>js<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">type</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">name</span>&gt;</span>scriptaculous/builder.js<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">name</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">action</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">action</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"removeItem\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">type</span>&gt;</span>js<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">type</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">name</span>&gt;</span>scriptaculous/dragdrop.js<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">name</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">action</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">action</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"removeItem\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">type</span>&gt;</span>skin_js<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">type</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">name</span>&gt;</span>js/ie6.js<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">name</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">action</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">action</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"removeItem\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">type</span>&gt;</span>skin_css<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">type</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">name</span>&gt;</span>css/styles-ie.css<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">name</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">action</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">reference</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">default</span>&gt;</span>\n</code></pre>\n<p>В целом получилось удалить 61.3 kB, без лишних движений - очень просто :)</p>\n<h2 id=\"obedinite-fajly-css-i-java-script\"><a name=\"obedinite-fajly-css-i-java-script\" class=\"h-link\" href=\"#\"></a>Объедините файлы CSS и JavaScript</h2>\n<p>В Magento есть возможность объединить все CSS и JavaScript файлы в один. Этой возможность обязательно нужно пользоваться, так как это уменьшит количество запросов на сервер и ускорит загрузку страницы. Чтобы это сделать просто перейдите в Система &gt; Конфигурация &gt; Для разработчика &gt; Настройки JavaScript и Настройки CSS, выберите &quot;Да&quot; для &quot;Объединить файлы JavaScript&quot; и &quot;Объединить файлы CSS&quot;. А если Вы вдруг решите поменять какой-то файл, то просто зайдите в &quot;Управление кэшем&quot; и нажмите кнопку &quot;Очистить кэш JavaScript/CSS&quot;.</p>\n<p>Но будьте осторожны, не забывайте ставить точки с запятой где нужно в JavaScript, потому что если это не делать, то есть вероятность, что после объединения файлов Ваш код перестанет работать. Кстати, это сразу же и подсказка, если код не работает значить нужно искать пропущенную точку с запятой :)</p>\n<h2 id=\"minificzirujte-fajly-css-i-java-script\"><a name=\"minificzirujte-fajly-css-i-java-script\" class=\"h-link\" href=\"#\"></a>Минифицируйте файлы CSS и JavaScript</h2>\n<p>В случае с CSS все достаточно просто, если используете SASS или SCSS, так просто передайте опцию &quot;--output-style compressed&quot;. Аналогично для других препроцессоров CSS.</p>\n<p>С JavaScript все немного сложно, я потратил довольно таки немало времени в поисках нормального минификатора JavaScript написанного на PHP, но так и не смог ничего полезного найти. То что есть либо устаревшее, либо минифицирует недостаточно агрессивно, либо в некоторых случаях минифицирует неправильно. Тогда то я и решил <app-link to=\"backend\" params=\"{&quot;id&quot;:&quot;minifikatsiya-javascript-v-magento-1x&quot;}\">использовать старый добрый uglifyjs</app-link> (который кстати и точки с запятой вместо Вас поставит ;)).</p>\n<p>Получилось лучше чем я ожидал! Понятно, что для этого из PHP нужно запустить отдельный процесс, который это делает и соответственно проверять, пока нет минифицированного файла - отдаем объединенный неминифицированный.</p>\n<h2 id=\"keshirujte-klientskie-perevody\"><a name=\"keshirujte-klientskie-perevody\" class=\"h-link\" href=\"#\"></a>Кэшируйте клиентские переводы</h2>\n<p>Меня шокировало когда я узнал, что Magento добавляет клиентские переводы на все страницы в виде инлайнового тега script. И это грузится на каждой странице! Больше переводов - дольше грузится страница. <app-link to=\"backend\" params=\"{&quot;id&quot;:&quot;kak-keshirovat-client-side-perevody-v-magento&quot;}\">По правильному все это нужно писать в отдельный файл</app-link>, отдавать его клиенту и кэшировать &quot;навсегда&quot;!</p>\n<h2 id=\"vmesto-zaklyucheniya\"><a name=\"vmesto-zaklyucheniya\" class=\"h-link\" href=\"#\"></a>Вместо заключения</h2>\n<p>Почти все из выше перечисленного я использовал не так давно, для достаточно сложного интернет магазина, в котором я решил подключить jQuery 3.2-slim и в конце минифицированная gzipped версия JavaScript составила всего 136 кБ, а CSS 23 кБ. На данный момент <a href=\"https://developers.google.com/speed/pagespeed/insights/\" target=\"_blank\" rel=\"noopener nofollow\">Google Page Speed</a> показывает оценки 80 для мобильных устройств и 85 для настольных. Страница отображается за 1.2 с, все картинки и остальные ресурсы загружаются еще через 2 секунды.</p>\n<p>В целом результат я считаю очень хорошим как для Magento. Так что оптимизируйте и вкладывайте время в улучшения своего магазина, поверьте это очень сильно увеличит UX и поднимет Ваш сайт в ТОП без дополнительных затрат.</p>","headings":[["http-keshirovanie-i-gzip","HTTP кэширование и gzip"],["optimizacziya-servernoj-chasti-v-magento","Оптимизация серверной части в Magento"],["optimizacziya-risunkov","Оптимизация рисунков"],["css-sprajty","CSS спрайты"],["data-urls","Data urls"],["offlajn-rezhim-s-service-worker","Оффлайн режим с Service Worker"],["udalite-nenuzhnye-java-script-i-css-fajly","Удалите ненужные JavaScript и CSS файлы"],["obedinite-fajly-css-i-java-script","Объедините файлы CSS и JavaScript"],["minificzirujte-fajly-css-i-java-script","Минифицируйте файлы CSS и JavaScript"],["keshirujte-klientskie-perevody","Кэшируйте клиентские переводы"],["vmesto-zaklyucheniya","Вместо заключения"]],"id":"optimizatsiya-zagruzki-stranitsy-v-magento-1x"}