{"title":"Страницы всех новинок и спец. предложений с фильтрами в Magento","summary":"Думаю у большинства фрилансеров, тех кто работает с Magento возникала задача\nвывести страницу всех спец. предложений с возможностью фильтрации. И наверняка\nчасто приходилось говорить заказчику, что это сложно, невозможно и еще кучу\nотговорок. Представляю Вам решение\n","author":"sstotskyi","categories":["backend","important"],"createdAt":"2011-10-06T18:50:00.000Z","meta":{"keywords":["magento","новинки","страницы"]},"alias":"stranitsy-vsekh-novinok-i-spets-predlozhenij-s-filtrami-v-magento","content":"<p>В одной из <app-link to=\"backend\" params=\"{&quot;id&quot;:&quot;bloki-kak-vyvesti-spisok-vsekh-novinok-ili-spets-predlozhenii-v-magento&quot;}\">предыдущих статей</app-link> я рассказывал, как можно вывести основные типы блоков для продуктов. Продолжая тему, хочу поделится идеей, как можно отобразить страницу категории с фильтрами, сортировкой и пейджингом для любых типов продуктов. Для простоты возьмем 2 типа: последние продукты (весь каталог обратном порядке) и продукты со спец. предложением.</p>\n<h2 id=\"fundament-zalog-ustojchivosti\"><a name=\"fundament-zalog-ustojchivosti\" class=\"h-link\" href=\"#\"></a>Фундамент - залог устойчивости</h2>\n<p>Идея очень проста и состоит в том, что мы будем отображать дефолтную категорию, которая содержит в себе все продукты, применив к ним необходимые фильтры. Обязательным условием является установка атрибута &quot;Is Anchor&quot; в <strong>true</strong>.</p>\n<p>Из той же статьи, которая была упомянута выше я возьму модуль и расширю его функционал. По сути нужно написать всего один класс контроллера, поскольку правила роутинга я прописал заранее. Контролеры модуля будут доступны по url <strong>products</strong>. Сам класс является наследником <strong>Mage_Catalog_CategoryController</strong>.</p>\n<p>Как говорится все уже написано до нас, но немного не так, по-этому придется скопировать метод <strong>_initCategory</strong> и часть метода <strong>viewAction</strong> в новый контроллер из его родителя. В первом меняем строку</p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-keyword\">if</span> (!Mage::helper(<span class=\"hljs-string\">'catalog/category'</span>)-&gt;canShow($category)) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n}\nMage::getSingleton(<span class=\"hljs-string\">'catalog/session'</span>)-&gt;setLastVisitedCategoryId($category-&gt;getId());\n</code></pre>\n<p>на</p>\n<pre><code class=\"hljs language-php\">$isRootCategory = !$category-&gt;isInRootCategoryList();\n<span class=\"hljs-keyword\">if</span> (!$isRootCategory &amp;&amp; !Mage::helper(<span class=\"hljs-string\">'catalog/category'</span>)-&gt;canShow($category)) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\n}\n\n<span class=\"hljs-keyword\">if</span> (!$isRootCategory) {\n    Mage::getSingleton(<span class=\"hljs-string\">'catalog/session'</span>)-&gt;setLastVisitedCategoryId($category-&gt;getId());\n}\n</code></pre>\n<p>И тем самым позволяем инициализировать дефолтную категорию стора.</p>\n<p>Создадим защищенный метод <strong>_prepareView</strong>, точная копия метода <strong>viewAction</strong>, за исключением что он не вызывает рендеринг лейаута, а возвращает модель инициализированной категории.</p>\n<p>И наконец ядром всей этой системы является метод <strong>_emulateCategory</strong>, который принимает 2 аргумента: идентификатор категории (в нашем случае - это всегда рут категория, но может быть и любая другая!) и придуманное нами имя. Возвращает коллекцию продуктов или выбрасывает исключение, если на странице нет <strong>product_list</strong> блока. На всякий случай (может понадобится в будущем) ставим категории флаг &quot;Is Emulated&quot;, чтобы знать что это нереальная категория.</p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-keyword\">protected</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">_emulateCategory</span><span class=\"hljs-params\">($categoryId, $categoryTitle)</span>\n</span>{\n    <span class=\"hljs-keyword\">$this</span>-&gt;getRequest()-&gt;setParam(<span class=\"hljs-string\">'id'</span>, $categoryId);\n\n    $category = <span class=\"hljs-keyword\">$this</span>-&gt;_prepareView();\n    $category-&gt;setName($categoryTitle)\n        -&gt;setIsEmulated(<span class=\"hljs-keyword\">true</span>);\n\n    <span class=\"hljs-comment\">// reset layout rendering</span>\n    <span class=\"hljs-keyword\">if</span> ($head = <span class=\"hljs-keyword\">$this</span>-&gt;getLayout()-&gt;getBlock(<span class=\"hljs-string\">'head'</span>)) {\n        $head-&gt;setTitle($categoryTitle);\n    }\n\n    <span class=\"hljs-keyword\">if</span> ($breadcrumb = <span class=\"hljs-keyword\">$this</span>-&gt;getLayout()-&gt;getBlock(<span class=\"hljs-string\">'breadcrumbs'</span>)) {\n        $breadcrumb-&gt;addCrumb(<span class=\"hljs-string\">'specials'</span>, <span class=\"hljs-keyword\">array</span>(\n            <span class=\"hljs-string\">'readonly'</span> =&gt; <span class=\"hljs-keyword\">true</span>,\n            <span class=\"hljs-string\">'title'</span>    =&gt; $categoryTitle,\n            <span class=\"hljs-string\">'label'</span>    =&gt; $categoryTitle\n        ));\n    }\n\n    <span class=\"hljs-keyword\">if</span> ($list = <span class=\"hljs-keyword\">$this</span>-&gt;getLayout()-&gt;getBlock(<span class=\"hljs-string\">'product_list'</span>)) {\n        <span class=\"hljs-keyword\">return</span> $list-&gt;getLoadedProductCollection();\n    }\n    Mage::throwException(<span class=\"hljs-keyword\">$this</span>-&gt;__(<span class=\"hljs-string\">'Unable to find products collection'</span>));\n}\n</code></pre>\n<p>Крепкий фундамент заложен, теперь можно приступить к реализации того, что нам нужно было изначально.</p>\n<h2 id=\"steny-uyut-i-pokoj\"><a name=\"steny-uyut-i-pokoj\" class=\"h-link\" href=\"#\"></a>Стены - уют и покой</h2>\n<p>Чтобы отобразить страницу, нужно создать метод-екшен с именем <strong>lastAction</strong></p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">lastAction</span><span class=\"hljs-params\">()</span>\n</span>{\n    $id   = Mage::app()-&gt;getStore()-&gt;getRootCategoryId();\n    $name = Mage::helper(<span class=\"hljs-string\">'catalog'</span>)-&gt;__(<span class=\"hljs-string\">'Last Products'</span>);\n\n    <span class=\"hljs-keyword\">try</span> {\n        $productCollection = <span class=\"hljs-keyword\">$this</span>-&gt;_emulateCategory($id, $name);\n        <span class=\"hljs-comment\">// filter products in some way</span>\n        $productCollection-&gt;setOrder(<span class=\"hljs-string\">'entity_id'</span>, <span class=\"hljs-string\">'desc'</span>);\n\n        <span class=\"hljs-keyword\">if</span> ($layer = <span class=\"hljs-keyword\">$this</span>-&gt;getLayout()-&gt;getBlock(<span class=\"hljs-string\">'catalog.leftnav'</span>)) {\n            <span class=\"hljs-comment\">// set visible filters</span>\n            <span class=\"hljs-comment\">#$layer-&gt;setVisibleFilters(array('price', 'manufacturer'));</span>\n        }\n    } <span class=\"hljs-keyword\">catch</span> (<span class=\"hljs-keyword\">Exception</span> $e) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>-&gt;_redirect(<span class=\"hljs-string\">''</span>);\n    }\n\n    <span class=\"hljs-keyword\">$this</span>-&gt;renderLayout();\n}\n</code></pre>\n<p>Страница спец. предложений делается аналогичным образом. Думаю Вы заметили комментарий &quot;<strong>set visible filters</strong>&quot;. Я немного усложнил задание и сделал возможность отображения только тех фильтров, которые мы хотим чтобы были видны на этой странице.</p>\n<p>Чтобы это заработало придется еще переопределить стандартный шаблон <strong>catalog/layer/view.phtml</strong>. Добавив в него проверку на видимость фильтра, если установлено свойство <strong>visible_filters</strong>, если нет - то показываем все фильтры. Страница доступна по url: /products/index/last. Вот что получилось у меня</p>\n<p><img src=\"/media/assets/last_products.jpg\" alt=\"Magento special products page\" loading=\"lazy\" width=\"700\" style=\"max-height: 418px;\" srcset=\"/media/assets/last_products-xs.jpg 375w,/media/assets/last_products.jpg 1280w\" sizes=\"(max-width: 375px) 375px,1280px\"></p>\n<p>Исходный код можно скачать <a href=\"/media/assets/Freaks_Product_Ext.zip\" download=\"Freaks_Product_Ext.zip\">здесь</a>.</p>\n<p><strong>P.S.</strong>: код фильтров для новых продуктов и спец. предложений можно найти <app-link to=\"backend\" params=\"{&quot;id&quot;:&quot;bloki-kak-vyvesti-spisok-vsekh-novinok-ili-spets-predlozhenii-v-magento&quot;}\">здесь</app-link>, где все детально расписано.</p>","headings":[["fundament-zalog-ustojchivosti","Фундамент - залог устойчивости"],["steny-uyut-i-pokoj","Стены - уют и покой"]],"id":"stranitsy-vsekh-novinok-i-spets-predlozhenij-s-filtrami-v-magento"}