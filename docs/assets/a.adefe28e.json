{"title":"Делаем syntax highlighter plugin для TinyMCE","summary":"Многие из нас сталкивались с проблемой подсветки программного кода в своем\nблоге. Наверное одно из самых лучших на сегодня решений - это highlight.js,\nразработан Иваном Сагалаевым . В этой статье я расскажу, как сделать подсветку\nпрограммного кода с помощью tinyMCE\n","author":"sstotskyi","categories":["frontend"],"createdAt":"2011-01-26T14:12:00.000Z","meta":{"keywords":["tinyMCE","подсветка синтаксиса"]},"alias":"delaem-syntax-highlighter-plugin-dlya-tinymce","content":"<p>Многие из нас сталкивались с проблемой подсветки программного кода в своем блоге. Наверное одно из самых лучших на сегодня решений - это highlight.js, разработан Иваном Сагалаевым .</p>\n<p>Это все круто конечно, но меня не устраивало то, что каждый раз, когда кто-то зайдет на страничку статьи, его браузер будет во всем DOM дереве искать нужные теги и потом еще и каким то образом вставлять новые.</p>\n<h2 id=\"stavim-zadachu\"><a name=\"stavim-zadachu\" class=\"h-link\" href=\"#\"></a>Ставим задачу</h2>\n<ul>\n<li>подсветка синтаксиса, неважна технология, важно просто, удобно и оптимизировано</li>\n<li>возможность работать с этим в TinyMCE</li>\n<li>возможность видеть подсвеченный код в TinyMCE</li>\n</ul>\n<h2 id=\"reshenie\"><a name=\"reshenie\" class=\"h-link\" href=\"#\"></a>Решение</h2>\n<p>Все очень просто! Что нам нужно? Плагин для TinyMCE! Скачиваем <a href=\"http://github.com/RichGuk/syntaxhl\" target=\"_blank\" rel=\"noopener nofollow\">SyntaxHL</a>, он предоставит простую функциональность popup-a с выбором, а так же панель управлением. Сохраняем его в <strong>tiny_mce/plugins/</strong> и подключаем. В настройках инициализации TinyMCE делаем следуюющее:</p>\n<pre><code class=\"hljs language-javascript\">tinyMCE.init({\n<span class=\"hljs-comment\">// подключаем плагин</span>\n   <span class=\"hljs-attr\">plugins</span> : <span class=\"hljs-string\">\"... ,syntaxhl, ....\"</span>,\n<span class=\"hljs-comment\">// определяем местоположение кнопки</span>\n   <span class=\"hljs-attr\">theme_advanced_buttons1</span> : <span class=\"hljs-string\">\"... , syntaxhl, ...\"</span>,\n ....................................\n</code></pre>\n<p>Если вы все сделали правильно, то в редакторе должна появится кнопка <app-link to=\"page\" title=\"highlight\" params=\"{&quot;id&quot;:&quot;media/tiny_images/highlight.gif&quot;}\"><img src=\"/media/assets/highlight.gif\" alt=\"highlight\" width=\"20\" height=\"20\"></app-link> .Теперь скачиваем последнюю версию <a href=\"http://softwaremaniacs.org/soft/highlight/ru/download/\" target=\"_blank\" rel=\"noopener nofollow\"><strong>Highlight.js</strong></a>  с сайта разработчика и копируем ее в <strong>tiny_mce/plugins/syntaxhl/js</strong>. Открываем файл <strong>tiny_mce/plugins/syntaxhl/js/dialog.js</strong>, ищем строки:</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">var</span> SyntaxHLDialog = {\n  <span class=\"hljs-attr\">init</span> : <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n  },\n</code></pre>\n<p>меняем на</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">var</span> SyntaxHLDialog = {\n  <span class=\"hljs-attr\">wrapper</span>: <span class=\"hljs-built_in\">document</span>.createElement(<span class=\"hljs-string\">'div'</span>),\n  <span class=\"hljs-attr\">init</span> : <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n  },\n</code></pre>\n<p>В том же файле</p>\n<pre><code class=\"hljs language-php\">textarea_output = <span class=\"hljs-string\">'&lt;pre class=\"'</span> + options + <span class=\"hljs-string\">';'</span> + f.syntaxhl_language.value += <span class=\"hljs-string\">';\ntextarea_output brush:\"&gt;'</span>;\ntextarea_output += tinyMCEPopup.editor.dom.encode(f.syntaxhl_code.value);\ntextarea_output += <span class=\"hljs-string\">'&lt;/pre&gt; '</span>; <span class=\"hljs-comment\">/* note space at the end, had a bug it was inserting twice? */</span>\ntinyMCEPopup.editor.execCommand(<span class=\"hljs-string\">'mceInsertContent'</span>, <span class=\"hljs-keyword\">false</span>, textarea_output);\ntinyMCEPopup.close();\n</code></pre>\n<p>заменяем на</p>\n<pre><code class=\"hljs language-javascript\">f.syntaxhl_code.value = f.syntaxhl_code.value.replace(<span class=\"hljs-regexp\">/&lt;/g</span>,<span class=\"hljs-string\">'&amp;lt;'</span>);\nf.syntaxhl_code.value = f.syntaxhl_code.value.replace(<span class=\"hljs-regexp\">/&gt;/g</span>,<span class=\"hljs-string\">'&amp;gt;'</span>);\ntextarea_output = <span class=\"hljs-string\">'&lt;pre&gt;&lt;code '</span>;\ntextarea_output += <span class=\"hljs-string\">'class=\"'</span> + f.syntaxhl_language.value + <span class=\"hljs-string\">'\"&gt;'</span>;\ntextarea_output += f.syntaxhl_code.value;\ntextarea_output += <span class=\"hljs-string\">'&lt;/code&gt;&lt;/pre&gt; '</span>; <span class=\"hljs-comment\">/* note space at the end, had a bug it was inserting twice? */</span>\n\n<span class=\"hljs-comment\">/* делаем подсветку сразу и передаем полученный HTML в tinyMCE */</span>\n<span class=\"hljs-keyword\">this</span>.wrapper.innerHTML = textarea_output;\nhljs.highlightBlock(<span class=\"hljs-keyword\">this</span>.wrapper.firstChild.firstChild, <span class=\"hljs-string\">'    '</span>);\ntinyMCEPopup.editor.execCommand(<span class=\"hljs-string\">'mceInsertContent'</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-keyword\">this</span>.wrapper.innerHTML);\ntinyMCEPopup.close();\n</code></pre>\n<p>Что же все это значит? Мы создали элемент-обертку и сначала вставляем код в него и потом при помощи метода <strong>hljs.highlightBlock</strong> подсвечиваем нужные символы и вставляем в tinyMCE уже подготовленный для отображения код.</p>\n<p>Теперь при нажатие на кнопочку <strong>syntaxHL</strong> у вас должно появиться окно, в которое вы можете вставить код, выбрать его тип, и он будет обрамлен в нужные нам теги.</p>\n<h2 id=\"nyuansy\"><a name=\"nyuansy\" class=\"h-link\" href=\"#\"></a>Нюансы</h2>\n<p>Откроем файл <strong>tiny_mce/plugins/syntaxhl/dialog.html</strong> и вносим небольшие поправки в названия языков (например в SyntaxHL по умолчанию JavaScript обозван <strong>value=&quot;jscript&quot;</strong>, и Highlight.js такой класс не поймет, поэтому его надо переименовать в <strong>value=&quot;javascript&quot;</strong>), а так же сортируем их в удобной нам последовательности. У меня выглядит так:</p>\n<pre><code class=\"hljs language-php\">&lt;select name=<span class=\"hljs-string\">\"syntaxhl_language\"</span> id=<span class=\"hljs-string\">\"syntaxhl_language\"</span>&gt;\n        &lt;option value=<span class=\"hljs-string\">\"php\"</span>&gt;PHP&lt;/option&gt;\n        &lt;option value=<span class=\"hljs-string\">\"javascript\"</span>&gt;Javascript&lt;/option&gt;\n        &lt;option value=<span class=\"hljs-string\">\"css\"</span>&gt;CSS&lt;/option&gt;\n        &lt;option value=<span class=\"hljs-string\">\"xml\"</span>&gt;XML/XHTML&lt;/option&gt;\n        &lt;option value=<span class=\"hljs-string\">\"bash\"</span>&gt;Bash(Shell)&lt;/option&gt;\n        &lt;option value=<span class=\"hljs-string\">\"perl\"</span>&gt;Perl&lt;/option&gt;\n        &lt;option value=<span class=\"hljs-string\">\"ruby\"</span>&gt;Ruby&lt;/option&gt;\n        &lt;option value=<span class=\"hljs-string\">\"sql\"</span>&gt;SQL&lt;/option&gt;\n        &lt;option value=<span class=\"hljs-string\">\"plain\"</span>&gt;Plain(Text)&lt;/option&gt;\n        &lt;option value=<span class=\"hljs-string\">\"diff\"</span>&gt;Diff&lt;/option&gt;\n        &lt;option value=<span class=\"hljs-string\">\"delphi\"</span>&gt;Delphi&lt;/option&gt;\n        &lt;option value=<span class=\"hljs-string\">\"groovy\"</span>&gt;Groovy&lt;/option&gt;\n        &lt;option value=<span class=\"hljs-string\">\"java\"</span>&gt;Java&lt;/option&gt;\n        &lt;option value=<span class=\"hljs-string\">\"python\"</span>&gt;Python&lt;/option&gt;\n        &lt;option value=<span class=\"hljs-string\">\"scala\"</span>&gt;Scala&lt;/option&gt;\n        &lt;option value=<span class=\"hljs-string\">\"vb\"</span>&gt;VB&lt;/option&gt;\n        &lt;option value=<span class=\"hljs-string\">\"csharp\"</span>&gt;C<span class=\"hljs-comment\">#&lt;/option&gt;</span>\n        &lt;option value=<span class=\"hljs-string\">\"cpp\"</span>&gt;C++&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n<p>ВНИМАНИЕ! Если у вас стоит русифицированный <strong>tinyMCE</strong>, то вам необходимо перейти в папку <strong>tiny_mce/plugins/syntaxhl/langs/</strong> и сделать копии имеющихся там файлов <strong>en.js</strong> и <strong>en_dlg.js</strong>, и переименовать в <strong>ru.js</strong> и <strong>ru_dlg.js</strong> соответственно.</p>\n<p>Чтобы видеть подсветку в <strong>tinyMCE</strong>, нужно в его инициализации добавить одну из тем <strong>highlight.js</strong></p>\n<pre><code class=\"hljs language-php\">tinyMCE.init({\n..............................\n    content_css : <span class=\"hljs-string\">\"/tools/tiny_mce/plugins/syntaxhl/js/hljs/css/default.css\"</span>,\n..............................\n});\n</code></pre>\n<h2 id=\"rezultat\"><a name=\"rezultat\" class=\"h-link\" href=\"#\"></a>Результат</h2>\n<p>Готовое решение можно скачать <app-link to=\"page\" params=\"{&quot;id&quot;:&quot;frontend/2011-01/delaem-syntax-highlighter-plugin-dlya-tinymce/syntaxhl.zip&quot;}\">ЗДЕСЬ</app-link></p>\n<p><a href=\"http://github.com/RichGuk/syntaxhl\" target=\"_blank\" rel=\"noopener nofollow\">SyntaxHL</a></p>","headings":[["stavim-zadachu","Ставим задачу"],["reshenie","Решение"],["nyuansy","Нюансы"],["rezultat","Результат"]],"id":"delaem-syntax-highlighter-plugin-dlya-tinymce"}