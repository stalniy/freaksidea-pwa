{"title":"Как включить капчу в Magento 1.x","summary":"Основная задача капчи - это убедится, что форма была заполнена реальным\nчеловеком, а не спамботом. И в этой статье я покажу, как ее включить в\nинтернет магазине Magento.\n","author":"sstotskyi","categories":["backend","important"],"createdAt":"2017-05-18T08:30:00.000Z","meta":{"keywords":["magento","спам","защита","captcha"]},"alias":"kak-vklyuchit-kapchu-v-magento-1x","content":"<p>Некоторое время назад я писал блог для Magento с возможностью добавления комментариев. Комментировать можно было всем, включая незарегистрированных пользователей. Через некоторое время я познал все радости прелести борьбы со спамом: в день приходило до 100 комментариев о чем угодно, но только не о статьях, которые там писаны...</p>\n<p>Тогда я занялся исследованиями и изобрел <a href=\"https://habrahabr.ru/post/127604/\" target=\"_blank\" rel=\"noopener nofollow\">Honey pot protection</a> - защита формы без капчи! Я был в восторге :) К сожалению мой восторг не продлился долго... В наше время спамботы достаточно умны, чтобы определить поля, которые можно не заполнять. Вот тогда и пришлось поискать возможность добавления бото-сложной капчи.</p>\n<h2 id=\"chto-est-v-korobke\"><a name=\"chto-est-v-korobke\" class=\"h-link\" href=\"#\"></a>Что есть в коробке?</h2>\n<p>В Magento начиная с версии 1.7 появился новый модуль - Mage_Captcha. По умолчанию, я могу включить капчу для таких форм:</p>\n<ul>\n<li>Регистрация нового пользователя</li>\n<li>Вход в личный кабинет</li>\n<li>Возобновление пароля</li>\n<li>Оформление заказа гостем</li>\n<li>Регистрация во время оформления заказа</li>\n</ul>\n<p>Для этого достаточно зайти в Система &gt; Конфигурация &gt; Клиенты &gt; Конфигурация клиента &gt; CAPTCHA и выбрать формы, которые нужно защитить при помощи капчи. Выглядит это так:</p>\n<p><img src=\"/media/assets/magento-captcha-settings.png\" alt=\"Magento настройки Captcha \" width=\"1049\" height=\"495\"></p>\n<p>Я же хочу добавить капчу для формы комментирования статей. Чтобы это сделать, давайте сначала определимся с задачами. Нужно</p>\n<ol>\n<li>Создать отдельный модуль, который объединит все вместе</li>\n<li>Добавить возможность выбора новой формы в админке (пусть она называется Post Comment)</li>\n<li>Показывать пользователю капчу в форме комментария</li>\n<li>Проверить правильно ли пользователь ввел капчу, и если неправильно, то отображать ошибку</li>\n</ol>\n<h2 id=\"novyj-modul\"><a name=\"novyj-modul\" class=\"h-link\" href=\"#\"></a>Новый модуль</h2>\n<p>О том <app-link to=\"page\" params=\"{&quot;id&quot;:&quot;php_and_somethings/show-5-magento---sozdanie-crud-modulya&quot;}\">как создать новый модуль в Magento</app-link>, я писал <app-link to=\"page\" params=\"{&quot;id&quot;:&quot;php_and_somethings/show-59-magento-konfiguratsiya-ot-a-do-ya-bazovye-nastrojki-modulya&quot;}\">в других статьях</app-link>, поэтому опустим детали. Сразу добавлю файл в app/etc/modules/FI_Captcha.xml</p>\n<pre><code class=\"hljs language-xml\"><span class=\"hljs-comment\">&lt;!-- app/etc/modules/FI_Captcha.xml --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">config</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">modules</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">FI_Captcha</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">active</span>&gt;</span>true<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">active</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">codePool</span>&gt;</span>local<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">codePool</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">FI_Captcha</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">modules</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">config</span>&gt;</span>\n</code></pre>\n<p>и создам папку app/code/local/FI_Captcha, со стандартной структурой и файлом config.xml</p>\n<pre><code class=\"hljs language-xml\"><span class=\"hljs-meta\">&lt;?xml version=\"1.0\"?&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">config</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">global</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">models</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">fi_captcha</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">class</span>&gt;</span>FI_Captcha_Model<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">class</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">fi_captcha</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">models</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">global</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">frontend</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">events</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">controller_action_predispatch_blog_post_view</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">observers</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">captcha</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">class</span>&gt;</span>fi_captcha/observer<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">class</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">method</span>&gt;</span>checkCommentCaptchaValidity<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">method</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">captcha</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">observers</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">controller_action_predispatch_blog_post_view</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">events</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">layout</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">updates</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">fi_captcha</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">file</span>&gt;</span>fi_captcha.xml<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">file</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">fi_captcha</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">updates</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">layout</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">frontend</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">config</span>&gt;</span>\n</code></pre>\n<p>В этом модуле я слушаю событие controller_action_predispatch_blog_post_view, которое вызывается перед обработкой нового комментария. Там же я проверю правильность введенной информации с рисунка. А при помощи fi_captcha.xml, <app-link to=\"page\" title=\"Изменение layout-а в Magento при помощи XML\" params=\"{&quot;id&quot;:&quot;php_and_somethings/show-49-magento-konfiguratsiya-ot-a-do-ya-layout-updates&quot;}\">добавлю блок</app-link> капчи в статьи. Но давайте по порядку :)</p>\n<h2 id=\"kapcha-dlya-formy-kommentariev\"><a name=\"kapcha-dlya-formy-kommentariev\" class=\"h-link\" href=\"#\"></a>Капча для формы комментариев</h2>\n<p>Для того, чтобы добавить новую форму в настройки капчи, нужно обновить config.xml файл и добавить секцию default</p>\n<pre><code class=\"hljs language-xml\">  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">default</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">captcha</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">frontend</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">areas</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">post_comment</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Post Comment<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">post_comment</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">areas</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">frontend</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">captcha</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">default</span>&gt;</span>\n</code></pre>\n<p>Теперь обновим кэш и откроем страницу настроек</p>\n<p><img src=\"/media/assets/magento-comment-captcha.png\" alt=\"Magento Captcha для комментарев\" width=\"823\" height=\"378\"></p>\n<p>Аналогично можно добавлять форму в настройки админки, заменив frontend на adminhtml, но скорее всего это никогда не понадобится, поэтому и рассматривать не буду.</p>\n<h2 id=\"kommentarij-s-kapchej\"><a name=\"kommentarij-s-kapchej\" class=\"h-link\" href=\"#\"></a>Комментарий с капчей</h2>\n<p>Создаем новый файл обновления layout-тов в своей теме (если же нет такой, тогда в default скоупе и default теме)</p>\n<pre><code class=\"hljs language-xml\"><span class=\"hljs-meta\">&lt;?xml version=\"1.0\"?&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">layout</span> <span class=\"hljs-attr\">version</span>=<span class=\"hljs-string\">\"0.1.0\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">blog_post_view</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">reference</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"head\"</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">action</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"addJs\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">file</span>&gt;</span>mage/captcha.js<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">file</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">action</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">reference</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">reference</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"comments.form\"</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">block</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"captcha/captcha\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"captcha\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">action</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"setFormId\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">formId</span>&gt;</span>post_comment<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">formId</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">action</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">action</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"setImgWidth\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">width</span>&gt;</span>230<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">width</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">action</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">action</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"setImgHeight\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">height</span>&gt;</span>50<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">height</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">action</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">block</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">reference</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">blog_post_view</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">layout</span>&gt;</span>\n</code></pre>\n<p>В качестве formId, указывать нужно ключ формы в секции default (в файле config.xml), высоту и ширину капчи (в пикселях) можно выбрать произвольную. Также добавлю скрипт mage/captcha.js, который позволит пользователю обновлять рисунок капчи, при нажатии на соответствующую кнопку. И последнее, добавлю блок капчи в шаблон статьи</p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">if</span> ($captchaHtml = <span class=\"hljs-keyword\">$this</span>-&gt;getChildHtml(<span class=\"hljs-string\">'captcha'</span>)): <span class=\"hljs-meta\">?&gt;</span>\n&lt;ul <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">form</span>-<span class=\"hljs-title\">group</span>\"&gt;&lt;?<span class=\"hljs-title\">php</span> <span class=\"hljs-title\">echo</span> $<span class=\"hljs-title\">captchaHtml</span> ?&gt;&lt;/<span class=\"hljs-title\">ul</span>&gt;\n&lt;?<span class=\"hljs-title\">php</span> <span class=\"hljs-title\">endif</span> ?&gt;\n</span></code></pre>\n<p>И в результате получилось</p>\n<p><img src=\"/media/assets/magento-ui-comment-captcha.png\" alt=\"Magento Captcha для комментариев в магазине\" width=\"690\" height=\"568\"></p>\n<p>Осталось только проверять капчу перед сохранением комментария.</p>\n<h2 id=\"proverka-kapchi\"><a name=\"proverka-kapchi\" class=\"h-link\" href=\"#\"></a>Проверка капчи</h2>\n<p>Проверять капчу на своих контроллерах - просто, но как быть если хочется добавить проверку на уже существующий функционал или сторонний модуль? Именно для таких случаев <app-link to=\"page\" params=\"{&quot;id&quot;:&quot;php_and_somethings/show-63-magento-modeli-ot-a-do-ya-sobytiya-i-rewrite-klassov&quot;}\">в Magento есть возможность подписываться на события</app-link>. Мой модуль уже подписан на событие controller_action_predispatch_blog_post_view, поэтому осталось только написать обработчик.</p>\n<p>А для этого я добавлю класс FI_Captcha_Model_Observer и метод checkCommentCaptchaValidity, который будет проверять капчу на валидность</p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php</span> \n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FI_Captcha_Model_Observer</span> </span>{\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">checkCommentCaptchaValidity</span><span class=\"hljs-params\">(Varien_Event_Observer $observer)</span>\n  </span>{\n    $controller = $observer-&gt;getControllerAction();\n    $request = $controller-&gt;getRequest();\n\n    <span class=\"hljs-keyword\">if</span> (!$request-&gt;isPost()) {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>;\n    }\n\n    $formId = <span class=\"hljs-string\">'post_comment'</span>;\n    $captchaModel = Mage::helper(<span class=\"hljs-string\">'captcha'</span>)-&gt;getCaptcha($formId);\n\n    <span class=\"hljs-keyword\">if</span> (!$captchaModel-&gt;isRequired()) {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>;\n    }\n\n    $captcha = $request-&gt;getPost(Mage_Captcha_Helper_Data::INPUT_NAME_FIELD_VALUE);\n\n    <span class=\"hljs-keyword\">if</span> (!$captchaModel-&gt;isCorrect($captcha[$formId])) {\n      Mage::getSingleton(<span class=\"hljs-string\">'customer/session'</span>)-&gt;addError(Mage::helper(<span class=\"hljs-string\">'captcha'</span>)-&gt;__(<span class=\"hljs-string\">'Incorrect CAPTCHA.'</span>));\n      $controller-&gt;setFlag(<span class=\"hljs-string\">''</span>, Mage_Core_Controller_Varien_Action::FLAG_NO_DISPATCH, <span class=\"hljs-keyword\">true</span>);\n      $controller-&gt;getResponse()-&gt;setRedirect(Mage::helper(<span class=\"hljs-string\">'core/url'</span>)-&gt;getCurrentUrl());\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>;\n  }\n}\n</code></pre>\n<p>Как я уже говорил раньше, этот метод запускается перед созданием комментария, если капча введена неверно, тогда комментарий не создастся, а пользователь увидит соответствующее сообщение об ошибке. В случае правильности, комментарий отображается пользователю.</p>\n<p><img src=\"/media/assets/magento-captcha-error.png\" alt=\"Magento ошибка для Captcha\" width=\"715\" height=\"278\"></p>\n<h2 id=\"itogo\"><a name=\"itogo\" class=\"h-link\" href=\"#\"></a>Итого</h2>\n<p>Форма комментариев защищена, спама больше нет и все отлично! Прошло пару дней... Сложный рисунок на капче появлялся достаточно часто и приходилось нажимать кнопку обновить, иногда по несколько раз... Я подумал, если это напрягает меня, то точно будет напрягать пользователей магазина, нужно искать другой способ.</p>\n<p>И другой способ был найден - использовать Google Recaptcha, но об этом в следующей статье.</p>","headings":[["chto-est-v-korobke","Что есть в коробке?"],["novyj-modul","Новый модуль"],["kapcha-dlya-formy-kommentariev","Капча для формы комментариев"],["kommentarij-s-kapchej","Комментарий с капчей"],["proverka-kapchi","Проверка капчи"],["itogo","Итого"]],"id":"kak-vklyuchit-kapchu-v-magento-1x"}