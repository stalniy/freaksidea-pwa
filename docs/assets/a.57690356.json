{"title":"Как подключить Google reCaptcha на любую форму в Magento","summary":"Стандартный модуль Recaptcha, который я использовал в предыдущей статье не\nпозволяет добавлять капчу на форму, которая отображается на всех страницах,\nкак например форма обратного звонка. И также, он не позволяет отключать капчу\nдля авторизированных пользователей. В этой же статье я покажу как можно всего\nэтого добиться\n","author":"sstotskyi","categories":["backend","important"],"createdAt":"2017-05-24T08:00:00.000Z","meta":{"keywords":["magento","recaptcha","спам","защита"]},"alias":"kak-podklyuchit-google-recaptcha-na-lyubuyu-formu-v-magento","content":"<p>По просьбам в комментариях к <app-link to=\"page\" params=\"{&quot;id&quot;:&quot;php_and_somethings/show-79-kak-vklyuchit-google-recaptcha-v-magento-1x&quot;}\">статье о подключении Google Recaptcha</app-link>, я решил написать статью о том как можно улучшить модуль StudioForty9_Recaptcha, а именно:</p>\n<ul>\n<li>подключить капчу к форме, которая показывается на каждой странице</li>\n<li>отключить капчу для авторизированных пользователей</li>\n<li>как подключить несколько Google Recaptcha на одной странице</li>\n</ul>\n<p>В этой статья я буду рассказывать о своем модуле FI_Recaptcha, который я начал писать в предыдущей статье. Так что рекомендую с ней <app-link to=\"page\" params=\"{&quot;id&quot;:&quot;php_and_somethings/show-79-kak-vklyuchit-google-recaptcha-v-magento-1x&quot;}\">ознакомится</app-link>.</p>\n<h2 id=\"re-captcha-na-lyubuyu-formu\"><a name=\"re-captcha-na-lyubuyu-formu\" class=\"h-link\" href=\"#\"></a>reCaptcha на любую форму</h2>\n<p>В предыдущей статья я рассказывал о подключении капчи в форму комментариев и в том случае мне повезло, потому что имя action-а, который создает комментарий, точно такое же, как имя action-а, который отображает статью. Но что делать если имена не совпадают или если нужно выводить форму на всех страницах (например форма &quot;перезвонить&quot;)?</p>\n<p>Нужно изменить шаблон reCaptcha. Скопируйте из шаблонов директорию studioforty9 со всем содержимым в свою тему. Теперь изменим там первые пару строчек:</p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php</span>\n$id = <span class=\"hljs-keyword\">$this</span>-&gt;getRecaptchaId();\n<span class=\"hljs-meta\">?&gt;</span>\n<span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">$this</span>-&gt;isAllowed(<span class=\"hljs-keyword\">$this</span>-&gt;getAction()-&gt;getFullActionName())): <span class=\"hljs-meta\">?&gt;</span>\n&lt;!-- .... --&gt;\n</code></pre>\n<p>на</p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php</span>\n$id = <span class=\"hljs-keyword\">$this</span>-&gt;getRecaptchaId();\n$actionName = <span class=\"hljs-keyword\">$this</span>-&gt;hasActionName() ? <span class=\"hljs-keyword\">$this</span>-&gt;getActionName() : <span class=\"hljs-keyword\">$this</span>-&gt;getAction()-&gt;getFullActionName();\n<span class=\"hljs-meta\">?&gt;</span>\n<span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">$this</span>-&gt;isAllowed($actionName)): <span class=\"hljs-meta\">?&gt;</span>\n&lt;!-- ... --&gt;\n</code></pre>\n<p>Этим я добавил возможность указывать название action-а (первый параметр в $routes-&gt;add) для которого нужно показывать и валидировать капчу.</p>\n<p>Давайте теперь используем это на воображаемой форме обратного звонка, которая должна выводится на каждой странице в шапке</p>\n<pre><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">default</span>&gt;</span>    \n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">reference</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"header\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">block</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"studioforty9_recaptcha/explicit\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"captchaCallback\"</span> <span class=\"hljs-attr\">template</span>=<span class=\"hljs-string\">\"studioforty9/recaptcha/explicit.phtml\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">action</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"setActionName\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">name</span>&gt;</span>fi_recaptcha_index_callback<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">name</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">action</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">block</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">reference</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">default</span>&gt;</span>\n</code></pre>\n<p>И добавим поддержку в админке:</p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-comment\">// code inside FI_Recaptcha_Model_Observer</span>\n$routes-&gt;add(<span class=\"hljs-string\">'fi_recaptcha_index_callback'</span>, Mage::helper(<span class=\"hljs-string\">'core'</span>)-&gt;__(<span class=\"hljs-string\">'Callback Form'</span>));\n</code></pre>\n<p>В результате может получится что-то не мнимое :)</p>\n<p><img src=\"/media/assets/callback-recaptcha.png\" alt=\"Magento recaptcha форма перезвонить\" width=\"374\" height=\"450\"></p>\n<p>Все это отлично защищает сайт от не авторизированных пользователей, но зарегистрированных то мы знаем, они ввели свой email и пароль, зачем их напрягать и показывать капчу? Даже не смотря на то, что она такая простая - это слишком!</p>\n<h2 id=\"net-re-captch-e-dlya-zaregistrirovannyh-polzovatelej\"><a name=\"net-re-captch-e-dlya-zaregistrirovannyh-polzovatelej\" class=\"h-link\" href=\"#\"></a>Нет reCaptch-е для зарегистрированных пользователей</h2>\n<p>Чтобы добиться то, что я задумал сначала добавим новое поле в админку, которое будет позволять показывать или скрывать капчу для авторизированных пользователей. Для этого добавим <app-link to=\"page\" params=\"{&quot;id&quot;:&quot;php_and_somethings/show-60-magento-konfiguratsiya-ot-a-do-ya-systemxml&quot;}\">файл system.xml</app-link> в наш модуль с таким содержимым:</p>\n<pre><code class=\"hljs language-xml\"><span class=\"hljs-meta\">&lt;?xml version=\"1.0\"?&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">config</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">sections</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">google</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groups</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">recaptcha</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">fields</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">enabled_for_loggedin</span> <span class=\"hljs-attr\">translate</span>=<span class=\"hljs-string\">\"label\"</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Enabled For Logged In User<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">frontend_type</span>&gt;</span>select<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">frontend_type</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">source_model</span>&gt;</span>adminhtml/system_config_source_yesno<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">source_model</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">sort_order</span>&gt;</span>15<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">sort_order</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">show_in_default</span>&gt;</span>1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">show_in_default</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">show_in_website</span>&gt;</span>1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">show_in_website</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">show_in_store</span>&gt;</span>1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">show_in_store</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">enabled_for_loggedin</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">fields</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">recaptcha</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groups</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">google</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">sections</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">config</span>&gt;</span>\n</code></pre>\n<p>Почистим кэш и получим следующий результат:</p>\n<p><img src=\"/media/assets/recaptcha-loggedin.png\" alt=\"Magento Recaptcha выключаем для авторизированных пользователей\" width=\"684\" height=\"369\"></p>\n<p>Теперь использую <app-link to=\"page\" params=\"{&quot;id&quot;:&quot;php_and_somethings/show-63-magento-modeli-ot-a-do-ya-sobytiya-i-rewrite-klassov&quot;}\">Magento rewrite</app-link> переопределю хелпер класс оригинального модуля Recaptcha своим:</p>\n<pre><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">helpers</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">fi_recaptcha</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">class</span>&gt;</span>FI_Recaptcha_Helper<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">class</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">fi_recaptcha</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">studioforty9_recaptcha</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">rewrite</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">data</span>&gt;</span>FI_Recaptcha_Helper_Data<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">data</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">rewrite</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">studioforty9_recaptcha</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">helpers</span>&gt;</span>\n</code></pre>\n<p>И внутри своего класса наследуем оригинальный хелпер, переопределим метод isAllowed, в котором добавим проверку на необходимость показывать капчу авторизированным пользователям</p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FI_Recaptcha_Helper_Data</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Studioforty9_Recaptcha_Helper_Data</span>\n</span>{\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isAllowed</span><span class=\"hljs-params\">($route)</span>\n  </span>{\n    $isAllowed = <span class=\"hljs-keyword\">parent</span>::isAllowed($route);\n\n    <span class=\"hljs-keyword\">if</span> ($isAllowed &amp;&amp; Mage::helper(<span class=\"hljs-string\">'customer'</span>)-&gt;isLoggedIn()) {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>-&gt;isAllowedForLoggedIn();\n    }\n\n    <span class=\"hljs-keyword\">return</span> $isAllowed;\n  }\n\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isAllowedForLoggedIn</span><span class=\"hljs-params\">()</span>\n  </span>{\n    <span class=\"hljs-keyword\">return</span> Mage::getStoreConfig(<span class=\"hljs-string\">'google/recaptcha/enabled_for_loggedin'</span>);\n  }\n}\n</code></pre>\n<p>Вот и все, теперь если пользователей зарегистрирован и вошел в свою учетную запись, то капча ему не будет показываться нигде :)</p>\n<h2 id=\"podderzhka-neskolkih-re-captch-na-odnoj-stranicze\"><a name=\"podderzhka-neskolkih-re-captch-na-odnoj-stranicze\" class=\"h-link\" href=\"#\"></a>Поддержка нескольких reCaptch на одной странице</h2>\n<p>Модуль StudioForty9_Recaptcha из коробки поддерживать только 1 reCaptcha на одной странице. Это результат того, что имя callback функции захардкоджено внутри шаблона и для всех блоков имеет одинаковое значение. Также блок каждый раз добавляет новый скрипт на google, что может плохо отобразится на скорости загрузки страницы. Это и нужно исправить.</p>\n<p>Для начала нужно создать отбельный блок, для этого в config.xml добавим</p>\n<pre><code class=\"hljs language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">global</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">blocks</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">fi_recaptcha</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">class</span>&gt;</span>FI_Recaptcha_Block<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">class</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">fi_recaptcha</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">blocks</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">global</span>&gt;</span>\n</code></pre>\n<p>и соответственно создаем класс FI_Recaptcha_Block_Explicit, который наследует StudioForty9_Recaptcha_Block_Explicit</p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FI_Recaptcha_Block_Explicit</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Studioforty9_Recaptcha_Block_Explicit</span>\n</span>{\n  <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">protected</span> $_isCaptchaRendered = <span class=\"hljs-keyword\">false</span>;\n\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">renderCaptchaScript</span><span class=\"hljs-params\">()</span>\n  </span>{\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">$this</span>-&gt;isCaptchaRendered()) {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">''</span>;\n    }\n\n    <span class=\"hljs-keyword\">self</span>::$_isCaptchaRendered = <span class=\"hljs-keyword\">true</span>;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">$this</span>-&gt;getRecaptchaScript();\n  }\n\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isCaptchaRendered</span><span class=\"hljs-params\">()</span>\n  </span>{\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">self</span>::$_isCaptchaRendered;\n  }\n}\n</code></pre>\n<p>В этот класс я добавил статическое свойство $_isCaptchaRendered, для того чтобы выводить скрипт для Google reCaptcha только один раз и соответствующий метод renderCaptchaScript, который спрячет эти детали внутри себя.</p>\n<p>Открываем файл studioforty9/recaptcha/explicit.phtml и меняем вызов</p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-keyword\">$this</span>-&gt;getRecaptchaScript(); <span class=\"hljs-meta\">?&gt;</span>\n</code></pre>\n<p>на</p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-keyword\">$this</span>-&gt;renderCaptchaScript() <span class=\"hljs-meta\">?&gt;</span>\n</code></pre>\n<p>Теперь напишем единственный JavaScript обработчик для всех капч</p>\n<pre><code class=\"hljs language-php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">$this</span>-&gt;isAllowed($actionName)): <span class=\"hljs-meta\">?&gt;</span>\n&lt;div <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">recaptcha</span>\" <span class=\"hljs-title\">style</span>=\"<span class=\"hljs-title\">overflow</span>:<span class=\"hljs-title\">hidden</span>;<span class=\"hljs-title\">position</span>:<span class=\"hljs-title\">relative</span>;<span class=\"hljs-title\">margin</span>-<span class=\"hljs-title\">bottom</span>:10<span class=\"hljs-title\">px</span>;\"&gt;\n  &lt;<span class=\"hljs-title\">input</span> <span class=\"hljs-title\">type</span>=\"<span class=\"hljs-title\">checkbox</span>\" <span class=\"hljs-title\">name</span>=\"<span class=\"hljs-title\">cb</span>-&lt;?<span class=\"hljs-title\">php</span> <span class=\"hljs-title\">echo</span> $<span class=\"hljs-title\">id</span> ?&gt;\" <span class=\"hljs-title\">class</span>=\"<span class=\"hljs-title\">hide</span> <span class=\"hljs-title\">required</span>-<span class=\"hljs-title\">entry</span>\" /&gt;\n  &lt;<span class=\"hljs-title\">div</span> <span class=\"hljs-title\">class</span>=\"<span class=\"hljs-title\">recaptcha</span>-<span class=\"hljs-title\">placeholder</span>\"&gt;&lt;/<span class=\"hljs-title\">div</span>&gt;\n  &lt;?<span class=\"hljs-title\">php</span> <span class=\"hljs-title\">if</span> (!$<span class=\"hljs-title\">this</span>-&gt;<span class=\"hljs-title\">isCaptchaRendered</span>()): ?&gt;\n    &lt;<span class=\"hljs-title\">script</span> <span class=\"hljs-title\">type</span>=\"<span class=\"hljs-title\">text</span>/<span class=\"hljs-title\">javascript</span>\"&gt;\n      <span class=\"hljs-title\">function</span> <span class=\"hljs-title\">onloadCallback</span>() </span>{\n        <span class=\"hljs-keyword\">var</span> elements = document.querySelectorAll(<span class=\"hljs-string\">'.recaptcha-placeholder'</span>);\n\n        <span class=\"hljs-keyword\">Array</span>.prototype.<span class=\"hljs-keyword\">forEach</span>.call(elements, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(element)</span> </span>{\n          <span class=\"hljs-keyword\">var</span> widgetId = grecaptcha.render(element, {\n            <span class=\"hljs-string\">'sitekey'</span>: <span class=\"hljs-string\">\"&lt;?php echo $this-&gt;getSiteKey() ?&gt;\"</span>,\n            <span class=\"hljs-string\">'theme'</span>: <span class=\"hljs-string\">\"&lt;?php echo $this-&gt;getTheme() ?&gt;\"</span>,\n            <span class=\"hljs-string\">'type'</span>: <span class=\"hljs-string\">\"&lt;?php echo $this-&gt;getType() ?&gt;\"</span>,\n            <span class=\"hljs-string\">'size'</span>: <span class=\"hljs-string\">\"&lt;?php echo $this-&gt;getSize() ?&gt;\"</span>,\n            <span class=\"hljs-string\">'callback'</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(response)</span> </span>{\n              <span class=\"hljs-keyword\">if</span> (response.length &gt; <span class=\"hljs-number\">0</span>) {\n                <span class=\"hljs-keyword\">var</span> input = $(element).previous();\n                input.setAttribute(<span class=\"hljs-string\">'value'</span>, <span class=\"hljs-string\">'checked'</span>);\n                input.checked = <span class=\"hljs-keyword\">true</span>;\n              }\n            }\n          });\n          element.setAttribute(<span class=\"hljs-string\">'data-recaptcha-id'</span>, widgetId);\n        });\n      };\n    &lt;/script&gt;\n    <span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-keyword\">$this</span>-&gt;renderCaptchaScript() <span class=\"hljs-meta\">?&gt;</span>\n  <span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">endif</span> <span class=\"hljs-meta\">?&gt;</span>\n&lt;/div&gt;\n<span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">endif</span> <span class=\"hljs-meta\">?&gt;</span>\n</code></pre>\n<p>Вместо того, чтобы инициализировать одну капчу по id, я обрабатываю сразу все капчи на странице. Нахожу их по CSS классу &quot;recaptcha-placeholder&quot; и рисую капчу при помощи grecaptcha.render метода. callback вызывается в момент когда пользователь нажимает чекбокс и если response - это строка с длинной больше 0, то устанавливаем чекбокс в состояние &quot;отмечен&quot;. Также записываем recaptcha instance id (т.е., widgetId) в data атрибут. Это позволит управлять виджетом другими JavaScript скриптами (например, заресетить капчу).</p>\n<h2 id=\"zaklyuchenie\"><a name=\"zaklyuchenie\" class=\"h-link\" href=\"#\"></a>Заключение</h2>\n<p>Спасибо всем за интерес к данной теме! Пишите в комментариях если что-то не понятно, уточняйте и предлагайте темы для следующих статей.</p>","headings":[["re-captcha-na-lyubuyu-formu","reCaptcha на любую форму"],["net-re-captch-e-dlya-zaregistrirovannyh-polzovatelej","Нет reCaptch-е для зарегистрированных пользователей"],["podderzhka-neskolkih-re-captch-na-odnoj-stranicze","Поддержка нескольких reCaptch на одной странице"],["zaklyuchenie","Заключение"]],"id":"kak-podklyuchit-google-recaptcha-na-lyubuyu-formu-v-magento"}